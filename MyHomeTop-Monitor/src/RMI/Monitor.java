/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RMI;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

/**
 *
 * @author jean_
 */
public class Monitor extends javax.swing.JFrame implements Runnable {

    List<Isensor> sensores;
    List<Iatuador> atuadores;

    public Monitor() {
        initComponents();

        this.configurePainels();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPainelCozinha = new javax.swing.JPanel();
        JPainelSala = new javax.swing.JPanel();
        JPainelQ1 = new javax.swing.JPanel();
        JPainelQ2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monitor");
        setName("Monitor"); // NOI18N

        JPainelCozinha.setBorder(javax.swing.BorderFactory.createTitledBorder("Cozinha"));

        javax.swing.GroupLayout JPainelCozinhaLayout = new javax.swing.GroupLayout(JPainelCozinha);
        JPainelCozinha.setLayout(JPainelCozinhaLayout);
        JPainelCozinhaLayout.setHorizontalGroup(
            JPainelCozinhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        JPainelCozinhaLayout.setVerticalGroup(
            JPainelCozinhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        JPainelSala.setBorder(javax.swing.BorderFactory.createTitledBorder("Sala"));

        javax.swing.GroupLayout JPainelSalaLayout = new javax.swing.GroupLayout(JPainelSala);
        JPainelSala.setLayout(JPainelSalaLayout);
        JPainelSalaLayout.setHorizontalGroup(
            JPainelSalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        JPainelSalaLayout.setVerticalGroup(
            JPainelSalaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        JPainelQ1.setBorder(javax.swing.BorderFactory.createTitledBorder("Quarto 1"));

        javax.swing.GroupLayout JPainelQ1Layout = new javax.swing.GroupLayout(JPainelQ1);
        JPainelQ1.setLayout(JPainelQ1Layout);
        JPainelQ1Layout.setHorizontalGroup(
            JPainelQ1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        JPainelQ1Layout.setVerticalGroup(
            JPainelQ1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        JPainelQ2.setBorder(javax.swing.BorderFactory.createTitledBorder("Quarto 2"));

        javax.swing.GroupLayout JPainelQ2Layout = new javax.swing.GroupLayout(JPainelQ2);
        JPainelQ2.setLayout(JPainelQ2Layout);
        JPainelQ2Layout.setHorizontalGroup(
            JPainelQ2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );
        JPainelQ2Layout.setVerticalGroup(
            JPainelQ2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JPainelSala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPainelQ1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JPainelQ2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPainelCozinha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JPainelSala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPainelCozinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JPainelQ1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JPainelQ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void configurePainels() {
        JPainelSala.setLayout(new GridLayout(0, 3));
        JPainelSala.setPreferredSize(new Dimension(300, 302));

        JPainelCozinha.setLayout(new GridLayout(0, 3));
        JPainelCozinha.setPreferredSize(new Dimension(300, 302));

        JPainelQ1.setLayout(new GridLayout(0, 3));
        JPainelQ1.setPreferredSize(new Dimension(300, 302));

        JPainelQ2.setLayout(new GridLayout(0, 3));
        JPainelQ2.setPreferredSize(new Dimension(300, 302));
    }

    public void Atualiza() throws InterruptedException {
        try {

            while (true) {
                Thread.sleep(500);

                Icontrolador controlador = (Icontrolador) Naming.lookup("rmi://localhost:1099/controlador");

                this.sensores = (List<Isensor>) controlador.getSensores();
                this.atuadores = (List<Iatuador>) controlador.getAtuadores();

                JPainelSala.removeAll();
                JPainelCozinha.removeAll();
                JPainelQ1.removeAll();
                JPainelQ2.removeAll();
                for (int i = 0; i < atuadores.size(); i++) {
                    switch (atuadores.get(i).getComodo()) {
                        case "Sala": {
                            JCheckBox check = new JCheckBox("Ativo");
                            JLabel text = new JLabel();
                            text.setText(String.valueOf(atuadores.get(i).getVal()));
                            check.setSelected(atuadores.get(i).isOn());
                            check.setEnabled(false);

                            JPainelSala.add(new JLabel(atuadores.get(i).getName()));
                            JPainelSala.add(text);
                            JPainelSala.add(check);

                            JPainelSala.revalidate();
                            JPainelSala.repaint();
                            pack();

                            break;
                        }
                        case "Cozinha": {
                            JCheckBox check = new JCheckBox("Ativo");
                            JLabel text = new JLabel();
                            text.setText(String.valueOf(atuadores.get(i).getVal()));
                            check.setSelected(atuadores.get(i).isOn());
                            check.setEnabled(false);

                            JPainelCozinha.add(new JLabel(atuadores.get(i).getName()));
                            JPainelCozinha.add(text);
                            JPainelCozinha.add(check);

                            JPainelCozinha.revalidate();
                            JPainelCozinha.repaint();
                            pack();

                            break;
                        }
                        case "Quarto 1": {
                            JCheckBox check = new JCheckBox("Ativo");
                            JLabel text = new JLabel();
                            text.setText(String.valueOf(atuadores.get(i).getVal()));
                            check.setSelected(atuadores.get(i).isOn());
                            check.setEnabled(false);

                            JPainelQ1.add(new JLabel(atuadores.get(i).getName()));
                            JPainelQ1.add(text);
                            JPainelQ1.add(check);

                            JPainelQ1.revalidate();
                            JPainelQ1.repaint();
                            pack();

                            break;
                        }
                        case "Quarto 2": {
                            JCheckBox check = new JCheckBox("Ativo");
                            JLabel text = new JLabel();
                            text.setText(String.valueOf(atuadores.get(i).getVal()));
                            check.setSelected(atuadores.get(i).isOn());
                            check.setEnabled(false);

                            JPainelQ2.add(new JLabel(atuadores.get(i).getName()));
                            JPainelQ2.add(text);
                            JPainelQ2.add(check);

                            JPainelQ2.revalidate();
                            JPainelQ2.repaint();
                            pack();

                            break;
                        }
                        default:
                            JOptionPane.showMessageDialog(null, "algo errado aconteceu!");
                            break;
                    }

                }

            }

        } catch (NotBoundException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monitor().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPainelCozinha;
    private javax.swing.JPanel JPainelQ1;
    private javax.swing.JPanel JPainelQ2;
    private javax.swing.JPanel JPainelSala;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            this.Atualiza();
        } catch (InterruptedException ex) {
            Logger.getLogger(Monitor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
